{
  "id": "error_flow_default",
  "name": "Default Error Handling Flow",
  "description": "Standard error processing flow for Nodus V7.1 grid system",
  "version": "1.0.0",
  "trigger": {
    "event_type": "error",
    "conditions": [
      {
        "field": "error.severity",
        "operator": "exists"
      }
    ]
  },
  "actions": [
    {
      "id": "classify_error",
      "type": "classify_error",
      "params": {
        "categories": {
          "ui_error": ["render", "grid", "layout", "drag", "resize"],
          "system_error": ["database", "api", "network", "auth"],
          "policy_error": ["permission", "access", "validation"],
          "plugin_error": ["plugin", "extension", "manifest"]
        }
      },
      "timeout": 1000
    },
    {
      "id": "log_error",
      "type": "log_event",
      "params": {
        "level": "error",
        "category": "{{errorCategory}}",
        "message": "{{errorMessage}}",
        "details": {
          "stack": "{{stackTrace}}",
          "userId": "{{userId}}",
          "sessionId": "{{sessionId}}",
          "timestamp": "{{timestamp}}",
          "component": "{{component}}"
        }
      },
      "condition": {
        "field": "policies.system.enable_auditing",
        "operator": "equals",
        "value": true
      }
    },
    {
      "id": "show_user_notification",
      "type": "show_notification",
      "params": {
        "level": "error",
        "title": "Something went wrong",
        "message": "{{userFriendlyMessage}}",
        "duration": 5000,
        "actions": [
          {
            "label": "Retry",
            "action": "retry_operation",
            "params": {
              "operationId": "{{operationId}}"
            }
          },
          {
            "label": "Report Issue",
            "action": "report_error",
            "params": {
              "errorId": "{{errorId}}"
            }
          }
        ]
      },
      "condition": {
        "field": "error.showToUser",
        "operator": "not_equals",
        "value": false
      }
    },
    {
      "id": "record_metric",
      "type": "record_metric",
      "params": {
        "metric": "error_count",
        "value": 1,
        "tags": {
          "category": "{{errorCategory}}",
          "severity": "{{error.severity}}",
          "component": "{{component}}"
        }
      }
    },
    {
      "id": "trigger_recovery",
      "type": "trigger_recovery",
      "params": {
        "recoveryActions": {
          "ui_error": [
            {
              "action": "refresh_component",
              "params": {
                "componentId": "{{component}}"
              }
            },
            {
              "action": "reset_grid_state",
              "condition": {
                "field": "component",
                "operator": "starts_with",
                "value": "grid"
              }
            }
          ],
          "system_error": [
            {
              "action": "fallback_to_cache",
              "params": {
                "cacheKey": "{{cacheKey}}"
              }
            },
            {
              "action": "enable_offline_mode",
              "condition": {
                "field": "error.type",
                "operator": "equals",
                "value": "network"
              }
            }
          ],
          "policy_error": [
            {
              "action": "show_permission_dialog",
              "params": {
                "requiredPermission": "{{requiredPermission}}"
              }
            }
          ]
        }
      },
      "condition": {
        "field": "error.recoverable",
        "operator": "equals",
        "value": true
      }
    },
    {
      "id": "send_analytics",
      "type": "send_analytics",
      "params": {
        "event": "error_occurred",
        "properties": {
          "error_id": "{{errorId}}",
          "error_category": "{{errorCategory}}",
          "error_severity": "{{error.severity}}",
          "user_agent": "{{userAgent}}",
          "page_url": "{{pageUrl}}",
          "grid_state": "{{gridState}}"
        }
      },
      "condition": {
        "field": "policies.system.enable_analytics",
        "operator": "equals",
        "value": true
      }
    },
    {
      "id": "ai_error_analysis",
      "type": "ai_analysis",
      "params": {
        "analysisType": "error_pattern",
        "data": {
          "errorMessage": "{{errorMessage}}",
          "stackTrace": "{{stackTrace}}",
          "userActions": "{{recentUserActions}}",
          "systemState": "{{systemState}}"
        },
        "outputFields": [
          "likely_cause",
          "suggested_fix",
          "prevention_tips"
        ]
      },
      "condition": {
        "and": [
          {
            "field": "policies.system.grid_ai_suggestions",
            "operator": "equals",
            "value": true
          },
          {
            "field": "error.severity",
            "operator": "in",
            "value": ["high", "critical"]
          }
        ]
      },
      "timeout": 5000
    }
  ],
  "error_handling": {
    "on_action_failure": {
      "action": "log_event",
      "params": {
        "level": "warn",
        "message": "Error flow action failed: {{failedAction}}",
        "details": "{{actionError}}"
      }
    },
    "on_timeout": {
      "action": "log_event",
      "params": {
        "level": "warn",
        "message": "Error flow action timed out: {{timedOutAction}}"
      }
    }
  },
  "metadata": {
    "policy": {
      "audit": true,
      "analytics": true,
      "ai": false
    },
    "permissions": {
      "required": [],
      "optional": ["system_admin"]
    },
    "performance": {
      "priority": "high",
      "max_execution_time": 10000
    }
  }
}
